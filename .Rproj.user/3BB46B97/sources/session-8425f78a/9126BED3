{
    "id": "9126BED3",
    "path": null,
    "project_path": null,
    "type": "r_dataframe",
    "hash": "0",
    "contents": "",
    "dirty": false,
    "created": 1685836279377.0,
    "source_on_save": false,
    "relative_order": 1,
    "properties": {
        "expression": "structure(list(hair = c(TRUE, TRUE, FALSE, TRUE, TRUE, TRUE,  TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE,  FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE,  FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE,  TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, TRUE,  TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE,  TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE,  TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE,  TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,  FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,  FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE), feathers = ceggs = cmilk = cairborne = caquatic = cpredator = ctoothed = cbackbone = cbreathes = cvenomous = cfins = clegs = c(4L, 4L, 0L, 4L, 4L, 4L, 4L, 0L, 0L, 4L,  4L, 2L, 0L, 0L, 4L, 6L, 2L, 4L, 0L, 0L, 2L, 2L, 4L, 2L, 6L, 4L,  4L, 2L, 4L, 2L, 6L, 4L, 2L, 2L, 0L, 4L, 4L, 2L, 0L, 6L, 6L, 2L,  6L, 2L, 4L, 4L, 6L, 4L, 4L, 4L, 4L, 6L, 4L, 8L, 4L, 4L, 2L, 2L,  2L, 2L, 0L, 0L, 0L, 4L, 4L, 4L, 0L, 4L, 4L, 4L, 4L, 2L, 8L, 0L,  0L, 2L, 0L, 0L, 2L, 2L, 0L, 0L, 0L, 2L, 2L, 5L, 0L, 2L, 6L, 4L,  4L, 4L, 0L, 2L, 4L, 2L, 2L, 6L, 4L, 0L, 2L), tail = cdomestic = ccatsize = ctype = structure(c(1L, 1L, 4L, 1L, 1L, 1L, 1L,  4L, 4L, 1L, 1L, 2L, 4L, 7L, 7L, 7L, 2L, 1L, 4L, 1L, 2L, 2L, 1L,  2L, 6L, 5L, 5L, 1L, 1L, 1L, 6L, 1L, 1L, 2L, 4L, 1L, 1L, 2L, 4L,  6L, 6L, 2L, 6L, 2L, 1L, 1L, 7L, 1L, 1L, 1L, 1L, 6L, 5L, 7L, 1L,  1L, 2L, 2L, 2L, 2L, 4L, 4L, 3L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,  2L, 7L, 4L, 1L, 1L, 3L, 7L, 2L, 2L, 3L, 7L, 4L, 2L, 1L, 7L, 4L,  2L, 6L, 5L, 3L, 3L, 4L, 1L, 1L, 2L, 1L, 6L, 1L, 7L, 2L), levels = c(\"mammal\",  \"bird\", \"reptile\", \"fish\", \"amphibian\", \"insect\", \"mollusc.et.al\" ), class = \"factor\")), row.names = c(\"aardvark\", \"antelope\",  \"bass\", \"bear\", \"boar\", \"buffalo\", \"calf\", \"carp\", \"catfish\",  \"cavy\", \"cheetah\", \"chicken\", \"chub\", \"clam\", \"crab\", \"crayfish\",  \"crow\", \"deer\", \"dogfish\", \"dolphin\", \"dove\", \"duck\", \"elephant\",  \"flamingo\", \"flea\", \"frog.1\", \"frog.2\", \"fruitbat\", \"giraffe\",  \"girl\", \"gnat\", \"goat\", \"gorilla\", \"gull\", \"haddock\", \"hamster\",  \"hare\", \"hawk\", \"herring\", \"honeybee\", \"housefly\", \"kiwi\", \"ladybird\",  \"lark\", \"leopard\", \"lion\", \"lobster\", \"lynx\", \"mink\", \"mole\",  \"mongoose\", \"moth\", \"newt\", \"octopus\", \"opossum\", \"oryx\", \"ostrich\",  \"parakeet\", \"penguin\", \"pheasant\", \"pike\", \"piranha\", \"pitviper\",  \"platypus\", \"polecat\", \"pony\", \"porpoise\", \"puma\", \"pussycat\",  \"raccoon\", \"reindeer\", \"rhea\", \"scorpion\", \"seahorse\", \"seal\",  \"sealion\", \"seasnake\", \"seawasp\", \"skimmer\", \"skua\", \"slowworm\",  \"slug\", \"sole\", \"sparrow\", \"squirrel\", \"starfish\", \"stingray\",  \"swan\", \"termite\", \"toad\", \"tortoise\", \"tuatara\", \"tuna\", \"vampire\",  \"vole\", \"vulture\", \"wallaby\", \"wasp\", \"wolf\", \"worm\", \"wren\"), class = \"data.frame\")",
        "caption": "Zoo",
        "totalObservations": "101",
        "displayedObservations": "101",
        "variables": "17",
        "cacheKey": "C11EBF42",
        "object": "",
        "environment": "_rs_no_env",
        "contentUrl": "grid_resource/gridviewer.html?env=_rs_no_env&obj=&cache_key=C11EBF42&max_cols=50",
        "preview": "0",
        "source_window_id": "",
        "Source": "Source"
    },
    "folds": "",
    "lastKnownWriteTime": 329952779208,
    "encoding": "",
    "collab_server": "",
    "source_window": "",
    "last_content_update": 1685836279377,
    "read_only": false,
    "read_only_alternatives": []
}